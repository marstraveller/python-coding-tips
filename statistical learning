import pandas as pd
import numpy as np

df=pd.read_csv('cancer_test_data.csv')
######################################## 	
patient_id 	test_result 	has_cancer
0 	79452 	Negative 	False
1 	81667 	Positive 	True
2 	76297 	Negative 	False
3 	36593 	Negative 	False
4 	53717 	Negative 	False
###########################################

1.Binomial distribution
np.random.binomial(coin_numbers,prob,test_numbers)

2.little project --cancer testing

# number of patients with cancer
df[df['has_cancer']==True].count()[0]
df.has_cancer.sum()

# proportion of patients with cancer
df[df['has_cancer']==True].count()[0]/len(df)
df.has_cancer.mean()

# proportion of patients without cancer who test positive
df[(df['has_cancer']==False)&(df['test_result']=='Positive')].count()[0]/df[df['has_cancer']==False].count()[0]
(df.query('has_cancer == False')['test_result'] == 'Positive').mean()

# proportion of patients with cancer who test positive
df[(df['has_cancer']==True)&(df['test_result']=='Positive')].count()[0]/df[df['has_cancer']==True].count()[0]
(df.query('has_cancer')['test_result'] == 'Positive').mean()

# What proportion of patients who tested positive has cancer?
(df.query('has_cancer')['test_result']=='Positive').sum()/(df.test_result=='Positive').sum()
df.query('test_result == \"Positive\"')['has_cancer'].mean()
df[df['test_result']=='Positive'].has_cancer.mean()
(df[df['test_result']=='Positive']['has_cancer']==True).mean()


3. 推论统计 和 描述统计
描述统计 是用来描述收集的数据，使用这节课讨论的度量，如中心度量、散布度量、分布形态和离群值。
推论统计 是利用收集的数据，对更大的总体得出结论。使用推论统计要求我们对准确代表感兴趣的总体进行取样。
收集数据的常见方式是调查。然而，根据提问的问题和提问的方式，调查会带有偏见性。

我们观察特定例子，可以发现

    总体 - 我们想要研究的整个群体
    参数 - 总体的数值摘要
    样本 - 总体的一个子集
    统计量 - 样本的数值摘要
统计量和参数通常是一个群体的平均数或比例。统计量是样本的数值。参数是总体的数值。总体是我们想要研究的整个群体，而样本是总体的一个子集。

    (1)抽样分布以初始参数值为中心。

    (2)根据样本容量大小，抽样分布降低了方差。具体说来，抽样分布的方差等于初始数据除以样本容量的方差。这也同样适用于样本平均数方差！

注释法中，如果说我们有随机变量 {X}，和方差 σ2，那么 X¯ 的分布 (样本平均数的抽样分布) 方差为 sigma^2/n

中心极限定理 表示样本容量足够大，平均数的抽样分布越接近正态分布。
中心极限定理 实际上应用于这些常见的统计量中：

    样本平均数 (x¯)
    样本比例 (p)
    样本平均数的差异 (x¯1−x¯2)
    样本比例的差异 (p1−p2)

它应用于其他统计量 但不能应用于所有统计量！
注意抽样分布中方差的减少。一般情况下，总是会减少n倍。 抽样分布的方差是总体方差除以样本容量.


自助法 (bootstrap) 是放回抽样。在 python 中使用 random.choice 实际上是自助法。无论选择多少次，我们数据集中任何数字的概率保持不变。
抛硬币和掷骰子也是自展抽样，因为在一个场景中滚动出 6，并不意味着后面出现 6 的概率降低。 
自展法 是我们从群组中进行放回抽样的技巧。
我们可以使用自展法，模拟在这节课进行多次的创建抽样分布。
通过自展法，计算我们统计量的重复数值，我们可以理解统计中的抽样分布。



我们可以通过创建自助法，利用抽样分布，仅从一个样本中很好地发现一个参数。
发现 "最佳统计量" 估计技巧最常见的三种方式：
最大似然估计
矩估计方法
贝叶斯估计
